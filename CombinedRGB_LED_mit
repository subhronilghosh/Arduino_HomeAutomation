#include <LiquidCrystal.h>

//LCD Variables
#define maxChar 32
char message[maxChar]; // stores the message
char readChar; // reads each character
byte index = 0; // defines the position into your array
int i;
LiquidCrystal lcd(12, 11, 6, 5, 4, 3);

//For RGB and LED
String mainString;
byte redLed = 8;
byte greenLed = 7; 
byte blueLed = 10;

void setup() {
  Serial.begin(9600);
  lcd.begin(16, 2);
  pinMode(13, OUTPUT);// for BLUE LED
}

void loop() {
  
  if(Serial.available()>0)
  {
    //initialising message array to store incoming message for LCD
    for (i = 0; i < 31; i++) {
      message[i] = '\0';
    }
    index = 0;

    mainString = Serial.readString();
    if(mainString.length()>1)
    {
      mainString = Serial.readString();
      byte firstCommaIndex = mainString.indexOf('.');
      byte secondCommaIndex = mainString.indexOf('.', firstCommaIndex + 1);
  
      String red = mainString.substring(0, firstCommaIndex);
      String green = mainString.substring(firstCommaIndex + 1, secondCommaIndex);
      String blue = mainString.substring(secondCommaIndex + 1);
  
      int r = red.toInt();
      int g = green.toInt();
      int b = blue.toInt();
  
      analogWrite(redLed, 255-r);  //analogWrite(redLed, r)
      analogWrite(greenLed, 255-g); //analogWrite(redLed, g)
      analogWrite(blueLed, 255-b); //analogWrite(redLed, b)
    }
    else
    {
      int Incoming_value = mainString.toInt();
      
      Serial.print(Incoming_value);
      Serial.print("\n");
      if(Incoming_value == 1)
        digitalWrite(13, HIGH);
      else if(Incoming_value == 0)
        digitalWrite(13, LOW);
    }
    while (Serial.available() > 0) {
    //the message can have up to 100 characters
    if (index < (maxChar - 1)) {
      readChar = Serial.read(); // Reads a character
      message[index] = readChar; // Stores the character in message array
      index++; // Increment position
      message[index] = '\0'; // Delete the last position
    }
  lcd.clear();
  lcd.print(message);
  for (int positionCounter = 0; positionCounter < i / 2; positionCounter++) {
    delay(750);
    lcd.scrollDisplayLeft();
  }
  }

  
}


